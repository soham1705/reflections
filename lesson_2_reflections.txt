What happens when you initialize a repository? Why do you need to do it?

	A .git file is added in that repository.
	We need to do it to enable commits and other stuff that can be done with Git repositories.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	A staging area is an intermediate area where one can store the particular files to be committed. It offers the flexibility of choosing particular files to commit instead of committing the entire working directory at once.

How can you use the staging area to make sure you have one commit per logical change?

	We add only those files to the staging area which are required to be updated in the latest commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When we want to create a feature we're not sure of (we can revert to the original version anytime)
	When many people are collaborating on the same project

How do the diagrams help you visualize the branch structure?

	They provide clarity on which commits belong to which branch and which branches are reachable from where.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The commits introduced in both branches are added to the merged branch. 
	This is because the merged branch has to contain the commits of both the branches, so it takes both their tips as parents.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Pros: Ability to smartly understand which changes were intended to remain in the final version (in most cases)
	Cons: May lead to undesired changes in some cases